/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Map;
import org.json.JSONObject;
import java.util.HashMap;

/**
 *
 * @author Asus
 */
public class aplikasicekcuacasederhana extends javax.swing.JFrame {

    /**
     * Creates new form aplikasicekcuacasederhana
     */
    public aplikasicekcuacasederhana() {
        initComponents();
    }

    /**
     *
     * @param dataCuaca
     * @return
     */

public class WeatherService {
    private static final String API_KEY = "e95d49542d62db088377444b4ffbaa23";
    private static final String BASE_URL = "http://api.openweathermap.org/data/2.5/weather?q=";

    public static String getWeatherData(String city) {
        StringBuilder result = new StringBuilder();
        try {
            String urlString = BASE_URL + city + "&units=metric&appid=" + API_KEY;
            URL url = new URL(urlString);

            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");

            BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = rd.readLine()) != null) {
                result.append(line);
            }
            rd.close();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }

        return result.toString();
    }
}
   private Map<String, String> parseWeatherData(String dataCuaca) {
    Map<String, String> weatherInfo = new HashMap<>();
    try {
        JSONObject jsonObject = new JSONObject(dataCuaca);
        JSONObject main = jsonObject.getJSONObject("main");
        JSONObject weather = jsonObject.getJSONArray("weather").getJSONObject(0);
        
        // Correctly retrieve the temperature as a double
        double temperature = main.getDouble("temp");
        weatherInfo.put("temperature", String.format("%.1f", temperature)); // Format to 1 decimal place
        
        // Retrieve description
        String description = weather.getString("description");
        weatherInfo.put("description", description);
        
        // Retrieve weather type (this can be adjusted as per your requirements)
        String weatherType = getWeatherType(description);
        weatherInfo.put("weatherType", weatherType);
    } catch (Exception e) {
        e.printStackTrace();
    }
    return weatherInfo;
}
private String getWeatherIconPath(String weatherType) {
    // Ensure weatherType is not null, otherwise use a default
    if (weatherType == null) {
        weatherType = "unknown";  // Default to "unknown" if weatherType is null
    }
    
    // Choose the appropriate icon based on the weather type
    switch (weatherType) {
        case "hot":
            return "sun.png";
        case "moderate":
            return "cloud.png";
        case "cold":
            return "snow.png";
        default:
            return "unknown.png"; // Default icon if no match
    }
}
private String determineWeatherType(float temperature) {
    if (temperature > 30) {
        return "hot";
    } else if (temperature >= 15 && temperature <= 30) {
        return "moderate";
    } else {
        return "cold";
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbLokasiFavorit = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtKota = new javax.swing.JTextField();
        btnCekCuaca = new javax.swing.JButton();
        lblCuaca = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblGambarCuaca = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Cek Cuaca Sederhana");

        jPanel1.setBackground(new java.awt.Color(0, 102, 51));

        cmbLokasiFavorit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BanjarMasin", "BanjarBaru", "MartaPura", "Kapuas" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Masukan Kota :");

        btnCekCuaca.setText("Cek Cuaca");
        btnCekCuaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCekCuacaActionPerformed(evt);
            }
        });

        lblCuaca.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCuaca.setForeground(new java.awt.Color(255, 255, 255));
        lblCuaca.setText("Cuaca :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Suhu :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Deskripsi:");

        lblGambarCuaca.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGambarCuaca.setForeground(new java.awt.Color(255, 255, 255));
        lblGambarCuaca.setText("Gambar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblGambarCuaca, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbLokasiFavorit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblCuaca, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(205, 205, 205))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtKota, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(btnCekCuaca)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLokasiFavorit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCekCuaca))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCuaca, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(lblGambarCuaca, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCekCuacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCekCuacaActionPerformed
    String kota = txtKota.getText();
    if (kota.isEmpty()) {
        kota = cmbLokasiFavorit.getSelectedItem().toString();
    }
    if (!kota.isEmpty()) {
        String dataCuaca = WeatherService.getWeatherData(kota);
        if (dataCuaca != null) {
            Map<String, String> weatherInfo = parseWeatherData(dataCuaca);
            lblCuaca.setText("Cuaca di " + kota);
            jLabel3.setText("Suhu: " + weatherInfo.get("temperature"));
            jLabel4.setText("Deskripsi: " + weatherInfo.get("description"));

            // Display icon based on weather type
            String weatherType = weatherInfo.get("weatherType");
            lblGambarCuaca.setIcon(new javax.swing.ImageIcon(getClass().getResource(getWeatherIconPath(weatherType))));
        } else {
            lblCuaca.setText("Data cuaca tidak ditemukan atau terjadi kesalahan.");
            jLabel3.setText("Suhu: N/A");
            jLabel4.setText("Deskripsi: N/A");
            lblGambarCuaca.setIcon(null);
        }
    } else {
        lblCuaca.setText("Masukkan nama kota.");
        jLabel3.setText("Suhu: N/A");
        jLabel4.setText("Deskripsi: N/A");
        lblGambarCuaca.setIcon(null);
    }




        
    }//GEN-LAST:event_btnCekCuacaActionPerformed

    private String getWeatherType(String description) {
    if (description.contains("clear")) {
        return "hot";  // Mengasumsikan langit cerah adalah cuaca panas
    } else if (description.contains("clouds")) {
        return "moderate";  // Cuaca berawan dianggap moderat
    } else if (description.contains("rain") || description.contains("drizzle")) {
        return "moderate";  // Cuaca hujan dianggap moderat
    } else if (description.contains("snow")) {
        return "cold";  // Cuaca bersalju dianggap dingin
    } else {
        return "unknown";  // Jika tidak terdeteksi
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(aplikasicekcuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(aplikasicekcuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(aplikasicekcuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(aplikasicekcuacasederhana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new aplikasicekcuacasederhana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCekCuaca;
    private javax.swing.JComboBox<String> cmbLokasiFavorit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCuaca;
    private javax.swing.JLabel lblGambarCuaca;
    private javax.swing.JTextField txtKota;
    // End of variables declaration//GEN-END:variables
}
